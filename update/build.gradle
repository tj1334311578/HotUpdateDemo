apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def config = rootProject.ext.android
def library = rootProject.ext.dependencies

android {
    compileSdk config.compileSdk

    defaultConfig {
        minSdk config.minSdk
        targetSdk config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility config.sourceCompatibility
        targetCompatibility config.targetCompatibility
    }

    kotlinOptions {
        jvmTarget = config.jvmTarget
    }
}

dependencies {
    implementation library.kotlin_stblib
    implementation library.core_runtime
    api (library.tinker) { changing = true }
    compileOnly (library.tinker_android_anno_support) { changing = true }

    testImplementation library.java_junit
    androidTestImplementation library.android_junit
    androidTestImplementation library.espresso_core
}

//上传本地仓库
uploadArchives {
    apply plugin: 'maven'
    // repositories.mavenDeployer {} 等价于 repository {mavenDeployer {}}
    repositories.mavenDeployer {
        //本地磁盘仓库路径，以放到项目根目录下的 repo 的文件夹为例
        //repository(url: uri('../repo'))
        //上传远程仓库地址
        repository(url: warehouse) {
            //仓库地址的账号和密码
            authentication(userName: warehouse_library_userName, password: warehouse_library_password)
        }
        //
        //snapshotRepository(url: plugin_warehouse) {
        //仓库地址的账号和密码
        //authentication(userName: warehouse_userName, password: warehouse_password)
        //}

        //groupId
        pom.groupId = update_pom_groupId
        //artifactId
        pom.artifactId = update_pom_artifactId
        //版本号
        pom.version = update_pom_version
    }
}